name: Check for Docker image existence
description: |
  A simple action that makes sure an image with a specified tag exists in an ECR 
  (Elastic Container Registry) repository.

  The tag can be specified manually using the input, or can be auto-detected
  from the latest commit, if there is no tag on the input. The action fails 
  if no image with specified tag can be found in the ECR repository.

  As a bonus, the action checks for any vulnerabilities reported by ECR and
  displays a warning in case of any vulnerability present on the image.
branding:
  icon: package
  color: blue
inputs:
  repository:
    description: The name of the ECR repository
    required: true
  tag:
    description: Version tag to be found (if not specified, commit tag is used)
    required: false
outputs:
  tag:
    description: Version tag
    value: ${{ steps.tag.outputs.tag }}
runs:
  using: composite
  steps:
    - id: tag
      name: Export detected version
      shell: bash
      run: |
        if [[ -z "${{ inputs.tag }}" ]]
        then
          echo "::set-output name=tag::$(git describe --tags --exact-match ${{ github.sha }})"
        else
          echo "::set-output name=tag::${{ inputs.tag }}"
        fi
    - name: Check for tag existence
      shell: bash
      run: |
        if [[ -z "${{ steps.tag.outputs.tag }}" ]]
        then
          echo "::error::No tag on commit was found"
          exit 1
        else
          echo "Using tag ${{ steps.tag.outputs.tag }}"
        fi
    - name: Check image existence
      shell: bash
      run: |
        IMAGE_TAG_QUERY="imageDetails[?contains(imageTags || ['0'], '${{ steps.tag.outputs.tag }}')]" 
        IMAGES_FOUND=$(\
          aws ecr describe-images \
          --repository-name ${{ inputs.repository }} \
          --query "length($IMAGE_TAG_QUERY)" \
          --output text
        )
        if [[ "$IMAGES_FOUND" -le 0 ]]
        then
          echo "::error::There was no image tag "${{ steps.tag.outputs.tag }}" found for ${{ inputs.repository }}!"
          exit 1
        else
          echo "✔️ Image with tag "${{ steps.tag.outputs.tag }}" found in the repository."
        fi
    - name: Check for image vulnerability issues
      shell: bash
      run: |
        IMAGE_TAG_QUERY="imageDetails[?contains(imageTags || ['0'], '${{ steps.tag.outputs.tag }}')]"
        CRITICAL_ISSUES_QUERY="$IMAGE_TAG_QUERY.imageScanFindingsSummary.findingSeverityCounts.CRITICAL"
        CRITICAL_ISSUES_FOUND=$(\
          aws ecr describe-images \
          --repository-name ${{ inputs.repository }} \
          --query "$CRITICAL_ISSUES_QUERY" \
          --output text
        )
        if [[ "$CRITICAL_ISSUES_FOUND" -ge 1 ]]
        then
          echo "::warning::The image" \
          "\"${{ inputs.repository }}:${{ steps.tag.outputs.tag }}\" has" \
          "$CRITICAL_ISSUES_FOUND critical vulnerability issues." \
          "See https://console.aws.amazon.com/ecr/repositories for details."
        fi
