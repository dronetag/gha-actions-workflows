name: Build & push
description: |
  Builds an image using the project's Dockerfile, and pushes it 
  to ACR (Azure Container Registry) repository.
inputs:
  tags:
    type: string
    required: false
    default: latest
  repository-name:
    type: string
    required: true
  acr-username:
    type: string
    required: true
  acr-password:
    type: string
    required: true
  acr-login-server:
    type: string
    required: true
  github-token:
    type: string
    required: true
  build-args:
    type: string
    required: false
  actor:
    type: string
    required: true
outputs:
  tags:
    value: ${{ steps.list.outputs.tags }}
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - id: auth-acr
      name: Authenticate with ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ inputs.acr-login-server }}
        username: ${{ inputs.acr-username }}
        password: ${{ inputs.acr-password }}
    - id: auth-ghcr
      name: Authorize Docker to ghcr.io
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ inputs.actor }}
        password: ${{ inputs.github-token }}
    - id: list
      name: List output image tags
      env:
        TAGS: ${{ inputs.tags }}
        REGISTRY: ${{ inputs.acr-login-server }}
        REPOSITORY: ${{ inputs.repository-name }}
      shell: bash
      run: |
        REPOSITORY_URI="$REGISTRY/$REPOSITORY"
        echo "::set-output name=tags::$(echo $TAGS | sed "s|[^ ]*|$REPOSITORY_URI\:&\n|g")"
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        build-args: ${{ inputs.build-args }}
        tags: "${{ steps.list.outputs.tags }}"